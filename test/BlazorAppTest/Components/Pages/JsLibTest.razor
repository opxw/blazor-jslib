@page "/jslib-test"
@using Opx.Blazor.JsLibDOM
@inject JsLibDOMInterop _jsl;
@rendermode RenderMode.InteractiveServer



<div>
	<div class="row mb-1">
		<div class="col-lg-12">General</div>
	</div>

	<div class="row mb-1">
		<div class="col-lg-12">
			<button type="button" class="btn btn-primary" @onclick="ConsoleLog">console.Log()</button>
		</div>
	</div>
</div>

<div class="mt-4">
	<div class="row mb-1">
		<div class="col-lg-12">HEAD</div>
	</div>

	<div class="row mb-1">
		<div class="col-lg-12"><button type="button" class="btn btn-primary" @onclick="AddCss1">
			Add Css</button>
		</div>
	</div>
	<div class="row mb-1">
		<div class="col-lg-12">
			<button type="button" class="btn btn-primary" @onclick="AddJs1">
				Add JS
			</button>
		</div>
	</div>
</div>

<div class="mt-4">
	<div class="row mb-1">
		<div class="col-lg-12">BODY</div>
	</div>

	<div class="row mb-1">
		<div class="col-lg-12">
			<button type="button" class="btn btn-primary" @onclick="AddCss2">
				Add Css
			</button>
		</div>
	</div>
	<div class="row mb-1">
		<div class="col-lg-12">
			<button type="button" class="btn btn-primary" @onclick="AddJs2">
				Add JS
			</button>
		</div>
	</div>
	<div class="row mb-1">
		<div class="col-lg-12">
			<button type="button" class="btn btn-primary" @onclick="AddClass1">
				Add Class
			</button>
			<button type="button" class="btn btn-danger" @onclick="RemoveClass1">
				Remove Class
			</button>
		</div>
	</div>
	<div class="row mb-1">
		<div class="col-lg-12">
			<button type="button" class="btn btn-primary" @onclick="AddClass2">
				Add Multiple Class
			</button>
			<button type="button" class="btn btn-danger" @onclick="RemoveClass2">
				Remove Multiple Class
			</button>
		</div>
	</div>
</div>

<div class="mt-4">
	<div class="row mb-1">
		<div class="col-lg-12">ELEMENTS</div>
	</div>

	<div>Select & Right click -> inspect</div>
	<div id="test-id"></div>
	<div class="test-class"></div>
	<div name="test-name"></div>

	<div class="row mb-1">
		<div class="col-lg-12">
			<button type="button" class="btn btn-primary" @onclick="AddClassById">
				AddClass By ID
			</button>
			<button type="button" class="btn btn-danger" @onclick="RemoveClassById">
				RemoveClass By ID
			</button>
		</div>
	</div>

	<div class="row mb-1">
		<div class="col-lg-12">
			<button type="button" class="btn btn-primary" @onclick="SetAtrribute1">
				SetAttribute By ID
			</button>
			<button type="button" class="btn btn-danger" @onclick="RemoveAtrribute1">
				RemoveAttribute By ID
			</button>
		</div>
	</div>

	<div class="row mb-1">
		<div class="col-lg-12">
			<button type="button" class="btn btn-primary" @onclick="AddContent1">
				AddContent By ID
			</button>
			<button type="button" class="btn btn-danger" @onclick="RemoveContent1">
				RemoveContent By ID
			</button>
		</div>
	</div>

	<div class="row mb-1">
		<div class="col-lg-12">
			<button type="button" class="btn btn-primary" @onclick="AddHTMLContent1">
				AddHTMLContent By ID
			</button>
			<button type="button" class="btn btn-danger" @onclick="RemoveHTMLContent1">
				RemoveHTMLContent By ID
			</button>
		</div>
	</div>

	<div class="row mb-1">
		<div class="col-lg-12">
			<button type="button" class="btn btn-primary" @onclick="AddClassByName">
				AddClass By Name
			</button>
		</div>
		<div class="col-lg-12">
			<button type="button" class="btn btn-primary" @onclick="RemoveClassByName">
				RemoveClass By Name
			</button>
		</div>
	</div>

	<div class="row mb-1">
		<div class="col-lg-12">
			<form class="form-control">
				<input type="text" id="myId" name="myName" />
			</form>
		</div>
		<div class="col-lg-12">
			<button type="button" class="btn btn-primary" @onclick="GetValue1">
				Get Value
			</button>
			valueById is @valueById
			<button type="button" class="btn btn-primary" @onclick="SetValue1">
				Set Value
			</button>
		</div>
	</div>

	
</div>

@code {
	async Task ConsoleLog()
	{
		await _jsl.ConsoleLog("Hello world");
	}

	async Task AddCss1()
	{
		await _jsl.Head.AddCss("my-css.css");
	}

	async Task AddJs1()
	{
		await _jsl.Head.AddJs("my-js.js");
	}

	async Task AddCss2()
	{
		await _jsl.Body.AddCss("my-css.css");
	}

	async Task AddJs2()
	{
		await _jsl.Body.AddJs("my-js.js");
	}

	async Task AddClass1()
	{
		await _jsl.Body.AddClass("myclass");
	}

	async Task RemoveClass1()
	{
		await _jsl.Body.RemoveClass("myclass");
	}

	async Task AddClass2()
	{
		await _jsl.Body.AddClasses(new string[]
		{
			"mystyle-1", "a", "b"
		});
	}

	async Task RemoveClass2()
	{
		await _jsl.Body.RemoveClasses(new string[]
		{
			"mystyle-1", "a", "b"
		});
	}

	async Task AddClassById()
	{
		await _jsl.Elements.ById("test-id").AddClass("class-in-test-id");
	}

	async Task RemoveClassById()
	{
		await _jsl.Elements.ById("test-id").RemoveClass("class-in-test-id");
	}

	async Task AddClassByName()
	{
		await _jsl.Elements.ByName("test-name").AddClass("class-in-test-name");
	}

	async Task RemoveClassByName()
	{
		await _jsl.Elements.ByName("test-name").RemoveClass("class-in-test-name");
	}

	async Task SetAtrribute1()
	{
		await _jsl.Elements.ById("test-id").SetAttribute("my-attribute", "my-value");
	}

	async Task RemoveAtrribute1()
	{
		await _jsl.Elements.ById("test-id").RemoveAttribute("my-attribute");
	}

	async Task AddContent1()
	{
		await _jsl.Elements.ById("test-id").AddContent("this is text content <b>bold</b>");
	}

	async Task RemoveContent1()
	{
		await _jsl.Elements.ById("test-id").RemoveContent();
	}

	async Task AddHTMLContent1()
	{
		await _jsl.Elements.ById("test-id").AddHtmlContent("this is HTNL content <b>bold</b>");
	}

	async Task RemoveHTMLContent1()
	{
		await _jsl.Elements.ById("test-id").RemoveHtmlContent();
	}

	private string valueById;
	async Task GetValue1()
	{
		valueById = await _jsl.Elements.ById("myId").GetValue<string>();
	}

	async Task SetValue1()
	{
		await _jsl.Elements.ById("myId").SetValue("Hello");
	}
}
